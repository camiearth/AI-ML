## Mackay-Glass Time Series Prediction with LSTM
## Python

This project utilizes a Long Short-Term Memory (LSTM) based Recurrent Neural Network (RNN) for the generation and prediction of the Mackay-Glass time series. 
The Mackay-Glass time series is a non-linear, chaotic time series often used in time series prediction tasks.

## Task
Data Generation: Generate a sequence of 800 values from the Mackay-Glass time series with the following parameters:
- b = 0.1
- c = 0.2
- tau = 17
Data Initialization: Initialize the first 18 values of y as follows: [0.9697, 0.9699, 0.9794, 1.0003, 1.0319, 1.0703, 1.1076, 1.1352, 1.1485, 1.1482, 1.1383, 1.1234, 1.1072, 1.0928, 1.0820, 1.0756, 1.0739, 1.0759]
Data Preprocessing: Remove the first 100 values of y to reduce the bias towards the initial values.
Data Splitting: Split the remaining 700 values into 300 for training and 400 for testing.
Model Training: Train an LSTM-based recurrent neural network on the training values.
Model Testing: Test the performance of the trained LSTM model on the testing values and plot the predicted values alongside the actual values.
Hyperparameter Experimentation: Experiment with different delays and varying numbers of hidden nodes in the LSTM layer to improve prediction accuracy.

## Usage
To run this project, follow these steps:
- Generate the Mackay-Glass time series using the provided parameters.
- Preprocess the data by removing the initial values and splitting it into training and testing sets.
- Train the LSTM model, test its performance, and plot the results.
- Experiment with different hyperparameters to enhance prediction accuracy.

Author
Camilla Lo Conte
